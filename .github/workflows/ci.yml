name: CI
on: [push, pull_request]

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: {node-version: 20}
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
      - run: npm ci || true
      - run: npm run lint || true
      - run: npm test || true

  detox:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: android-actions/setup-android@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle
            ~/.android/avd
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: gradle-
      - name: Build & Test with Detox (skip if no package.json)
        run: |
          if [ -f package.json ]; then
            npm install
            npx expo prebuild --android
            npx detox build -c android.emu.release --headless
            npx detox test -c android.emu.release --headless
          else
            echo "package.json not found, skipping Detox tests"
          fi

  flutter-int:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
      - run: flutter test integration_test || true

  backend-matrix:
    strategy:
      matrix:
        backend: [supabase, firebase]
    runs-on: ubuntu-latest
    env:
      AIDERGEN_BACKEND: ${{ matrix.backend }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: {node-version: 20}
      - name: Install dependencies
        run: |
          if [ -f package.json ]; then npm ci; fi
      - name: Install Firebase CLI (only for firebase backend)
        if: matrix.backend == 'firebase'
        run: npm i -g firebase-tools
      - name: Setup backend services
        run: |
          if [ "${{ matrix.backend }}" = "supabase" ]; then
            npm i -g supabase@latest
            supabase start -x studio,inbucket &
            echo $! > backend_pid
          else
            firebase emulators:start --project demo --only auth,firestore --import=./state --export-on-exit=./state &
            echo $! > backend_pid
          fi
      - name: Wait for backend to be ready
        run: sleep 25
      - name: Run integration tests
        run: |
          npm run test:int || true
      - name: Stop backend services
        run: kill $(cat backend_pid)
